#ifndef _PARAMETERS_H_
#define _PARAMETERS_H_

//robot config
#define robot2015 0
#define robot2016 1
#define robotConfig robot2015

//pwm channels
#if robotConfig == robot2016
#define leftSideMotorsCh 1
#define rightSideMotorsCh 0
#elif robotConfig == robot2015
#define leftSideMotorsCh 9
#define rightSideMotorsCh 8
#endif

//dio channels
#if robotConfig == robot2016
#define ballReadyPhotoSwitchCh 5
#define ballCapturedPhotoSwitchCh 0
#define leftDriveEncA 3
#define leftDriveEncB 4
#define rightDriveEncA 1
#define rightDriveEncB 2
#elif robotConfig == robot2015
#define ballReadyPhotoSwitchCh 5
#define ballCapturedPhotoSwitchCh 0
#define leftDriveEncA 7
#define leftDriveEncB 6
#define rightDriveEncA 9
#define rightDriveEncB 8
#endif

//can IDs
#if robotConfig == robot2016
#define rollerMotorId 1
#define armMotorId 2
#elif robotConfig == robot2015
#define rollerMotorId 10
#define armMotorId 13
#endif

//analog channels
#if robotConfig == robot2016
#define potCh 0
#elif robotConfig == robot2015
#define potCh 0
#endif

//usb channels
#define driveJsCh 0
#define controlJsCh 1

//joystick channels
#define rollerIn 1
#define resetArmState 3
#define rollerEject 2
#define armDown 8
#define armFlat 7
#define armUp 6

//control joystick settings
#define rollerInSpeed 0.5
#define rollerStopSpeed 0.0
#define rollerOutSpeed -0.5

//potentiometer set points (all in volts)
#if robotConfig == robot2016
#define armDownPosition 0.0
#define armFlatPosition 0.38
#define armUpPosition 1.45
#elif robotConfig == robot2015
#define armDownPosition 0.0
#define armFlatPosition 0.38
#define armUpPosition 1.45
#endif

//potentiometer PID values
#define potMinVolt 0.0
#define potMaxVolt 5.0
#define potTol 10.0 //percent
//
#if robotConfig == robot2016
#define potP 1.1
#define potI 0.0
#define potD 0.0
#elif robotConfig == robot2015
#define potP 1.1
#define potI 0.0
#define potD 0.0
#endif


//drive parameters
#define driveEncoderCounts 1024.0
//
#if robotConfig == robot2016
#define maxOutputDriveFrac 0.6 //limit the drive motor output to this fraction of the total possible
#define wheelRadius 4.0 //inches
#define leftEncInv false
#define rightEncInv true
#elif robotConfig == robot2015
#define maxOutputDriveFrac 0.7 //limit the drive motor output to this fraction of the total possible
#define wheelRadius 2.0 //inches
#define leftEncInv false
#define rightEncInv true
#endif

//camera system parameters
#define camViewAngle 49.0
#define vTargetWidth 20
#define fovPixWidth 320
#define fovPixHeight 240

//autonomous parameters
#define autoDistance 8.0 //in feet
#if robotConfig == robot2016
#define autoLeftSpeed 0.9 //normalized speed from -1 to 1
#define autoRightSpeed 0.9
#define autoSpeedInvert -1.0 // -1 to invert; 1 to not invert
#elif robotConfig == robot2015
#define autoLeftSpeed 0.3 //normalized speed from -1 to 1
#define autoRightSpeed 0.3
#define autoSpeedInvert -1.0 // -1 to invert; 1 to not invert
#endif

//arm states
#define idleState 0
#define recieveState 1
#define pickupState 2
#define upState 3
#define ejectState 4

#endif /* _PARAMETERS_H_ */
